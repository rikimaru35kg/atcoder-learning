test.cpp: In lambda function:
test.cpp:239:49: error: no matching function for call to ‘std::pair<long long int, long long int>::pair(ll, vl&)’
  239 |                     return Pr(SIZE(route), route);
      |                                                 ^
In file included from /usr/include/c++/12/bits/stl_algobase.h:64,
                 from /usr/include/c++/12/bits/specfun.h:45,
                 from /usr/include/c++/12/cmath:1935,
                 from stdc++.h:41:
/usr/include/c++/12/bits/stl_pair.h:297:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  297 |         pair(pair<_U1, _U2>&& __p)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:297:9: note:   template argument deduction/substitution failed:
test.cpp:239:49: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘ll’ {aka ‘long long int’}
  239 |                     return Pr(SIZE(route), route);
      |                                                 ^
/usr/include/c++/12/bits/stl_pair.h:288:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<const _U1&, const _U2&>() constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  288 |         pair(const pair<_U1, _U2>& __p)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:288:9: note:   template argument deduction/substitution failed:
test.cpp:239:49: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘ll’ {aka ‘long long int’}
  239 |                     return Pr(SIZE(route), route);
      |                                                 ^
/usr/include/c++/12/bits/stl_pair.h:279:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  279 |         pair(_U1&& __x, _U2&& __y)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:279:9: note:   template argument deduction/substitution failed:
/usr/include/c++/12/bits/stl_pair.h:279:9: note: constraints not satisfied
/usr/include/c++/12/bits/stl_pair.h: In substitution of ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<long long int, long long int>::pair(_U1&&, _U2&&) [with _U1 = long long int; _U2 = long long int]’:
test.cpp:239:49:   required from here
/usr/include/c++/12/bits/stl_pair.h:279:2:   required by the constraints of ‘template<class _T1, class _T2> template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)’
/usr/include/c++/12/bits/stl_pair.h:277:45: note: the expression ‘_S_constructible<_U1, _U2>() [with _U1 = long long int; _U2 = std::__debug::vector<long long int, std::allocator<long long int> >&; _T1 = long long int; _T2 = long long int]’ evaluated to ‘false’
  277 |         requires (_S_constructible<_U1, _U2>())
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/12/bits/stl_pair.h:217:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> constexpr std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = long long int; _T2 = long long int]’
  217 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:217:9: note:   template argument deduction/substitution failed:
test.cpp:239:49: note:   mismatched types ‘std::tuple<_UTypes ...>’ and ‘ll’ {aka ‘long long int’}
  239 |                     return Pr(SIZE(route), route);
      |                                                 ^
/usr/include/c++/12/bits/stl_pair.h:200:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> constexpr std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = long long int; _T2 = long long int]’
  200 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:200:9: note:   template argument deduction/substitution failed:
test.cpp:239:49: note:   ‘std::__debug::vector<long long int>’ is not derived from ‘std::tuple<_UTypes ...>’
  239 |                     return Pr(SIZE(route), route);
      |                                                 ^
/usr/include/c++/12/bits/stl_pair.h:269:7: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) requires  _S_constructible<const _T1&, const _T2&>() [with _T1 = long long int; _T2 = long long int]’
  269 |       pair(const _T1& __x, const _T2& __y)
      |       ^~~~
/usr/include/c++/12/bits/stl_pair.h:269:39: note:   no known conversion for argument 2 from ‘vl’ {aka ‘std::__debug::vector<long long int>’} to ‘const long long int&’
  269 |       pair(const _T1& __x, const _T2& __y)
      |                            ~~~~~~~~~~~^~~
/usr/include/c++/12/bits/stl_pair.h:228:7: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair() requires (is_default_constructible_v<_T1>) && (is_default_constructible_v<_T2>) [with _T1 = long long int; _T2 = long long int]’
  228 |       pair()
      |       ^~~~
/usr/include/c++/12/bits/stl_pair.h:228:7: note:   candidate expects 0 arguments, 2 provided
/usr/include/c++/12/bits/stl_pair.h:196:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = long long int; _T2 = long long int]’
  196 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/12/bits/stl_pair.h:196:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/12/bits/stl_pair.h:195:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = long long int; _T2 = long long int]’
  195 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/12/bits/stl_pair.h:195:17: note:   candidate expects 1 argument, 2 provided
test.cpp:244:28: error: no matching function for call to ‘std::pair<long long int, long long int>::pair(ll&, vl)’
  244 |         return Pr(INF, vl());
      |                            ^
/usr/include/c++/12/bits/stl_pair.h:297:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  297 |         pair(pair<_U1, _U2>&& __p)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:297:9: note:   template argument deduction/substitution failed:
test.cpp:244:28: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘ll’ {aka ‘long long int’}
  244 |         return Pr(INF, vl());
      |                            ^
/usr/include/c++/12/bits/stl_pair.h:288:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<const _U1&, const _U2&>() constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  288 |         pair(const pair<_U1, _U2>& __p)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:288:9: note:   template argument deduction/substitution failed:
test.cpp:244:28: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘ll’ {aka ‘long long int’}
  244 |         return Pr(INF, vl());
      |                            ^
/usr/include/c++/12/bits/stl_pair.h:279:9: note: candidate: ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U2 = _U1; _T1 = long long int; _T2 = long long int]’
  279 |         pair(_U1&& __x, _U2&& __y)
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:279:9: note:   template argument deduction/substitution failed:
/usr/include/c++/12/bits/stl_pair.h:279:9: note: constraints not satisfied
/usr/include/c++/12/bits/stl_pair.h: In substitution of ‘template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<long long int, long long int>::pair(_U1&&, _U2&&) [with _U1 = long long int; _U2 = long long int]’:
test.cpp:244:28:   required from here
/usr/include/c++/12/bits/stl_pair.h:279:2:   required by the constraints of ‘template<class _T1, class _T2> template<class _U1, class _U2>  requires  _S_constructible<_U1, _U2>() constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&)’
/usr/include/c++/12/bits/stl_pair.h:277:45: note: the expression ‘_S_constructible<_U1, _U2>() [with _U1 = long long int&; _U2 = std::__debug::vector<long long int, std::allocator<long long int> >; _T1 = long long int; _T2 = long long int]’ evaluated to ‘false’
  277 |         requires (_S_constructible<_U1, _U2>())
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/12/bits/stl_pair.h:217:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> constexpr std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = long long int; _T2 = long long int]’
  217 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:217:9: note:   template argument deduction/substitution failed:
test.cpp:244:28: note:   mismatched types ‘std::tuple<_UTypes ...>’ and ‘ll’ {aka ‘long long int’}
  244 |         return Pr(INF, vl());
      |                            ^
/usr/include/c++/12/bits/stl_pair.h:200:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> constexpr std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = long long int; _T2 = long long int]’
  200 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/12/bits/stl_pair.h:200:9: note:   template argument deduction/substitution failed:
test.cpp:244:28: note:   ‘std::__debug::vector<long long int>’ is not derived from ‘std::tuple<_UTypes ...>’
  244 |         return Pr(INF, vl());
      |                            ^
/usr/include/c++/12/bits/stl_pair.h:269:7: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) requires  _S_constructible<const _T1&, const _T2&>() [with _T1 = long long int; _T2 = long long int]’
  269 |       pair(const _T1& __x, const _T2& __y)
      |       ^~~~
/usr/include/c++/12/bits/stl_pair.h:269:39: note:   no known conversion for argument 2 from ‘vl’ {aka ‘std::__debug::vector<long long int>’} to ‘const long long int&’
  269 |       pair(const _T1& __x, const _T2& __y)
      |                            ~~~~~~~~~~~^~~
/usr/include/c++/12/bits/stl_pair.h:228:7: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair() requires (is_default_constructible_v<_T1>) && (is_default_constructible_v<_T2>) [with _T1 = long long int; _T2 = long long int]’
  228 |       pair()
      |       ^~~~
/usr/include/c++/12/bits/stl_pair.h:228:7: note:   candidate expects 0 arguments, 2 provided
/usr/include/c++/12/bits/stl_pair.h:196:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = long long int; _T2 = long long int]’
  196 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/12/bits/stl_pair.h:196:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/12/bits/stl_pair.h:195:17: note: candidate: ‘constexpr std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = long long int; _T2 = long long int]’
  195 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/12/bits/stl_pair.h:195:17: note:   candidate expects 1 argument, 2 provided
